@using Ambacht.Common.Maps
@using Ambacht.Common.Maps.Nts
@using Ambacht.Common.Maps.Projections
@using Ambacht.Common.Mathmatics
@using NetTopologySuite.Features
@using NetTopologySuite.Geometries
<VectorMap 
			EnableMousePan="false" 
			EnableMouseZoom="false" 
		   class="w-full aspect-[3/2] block"
		   @ref="@_map">
	@foreach (var state in _states)
	{
		<VectorGeometry Value="@state.Geometry" Stroke="black" Fill="@state.Lean.GetColor()"/>
	}
</VectorMap>

@code {

	private VectorMap _map;
	private List<State> _states = States.ReadData().ToList();


	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);
		if (firstRender)
		{
			var bounds = GetBounds();
			await _map.Fit(bounds, true);
		}
	}

	private Rectangle<double> GetBounds()
	{
		var bounds = _states.Select(f => f.Geometry).GetBoundingRectangle().ExpandFraction(0.1);
		return bounds;
	}


	private static Projection _projection = new AlbersUSA();


}
